[versions]
# App config versions
compileSdk = "34"
coreKtxVersion = "1.13.0"
minSdk = "29"
swiperefreshlayoutVersion = "1.2.0-alpha01"
targetSdk = "34"
kotlinVersion = "1.9.22"

# Plugin versions
androidGradlePluginVersion = "8.3.2"

#Lib versions
appCompatVersion = "1.6.1"

composeVersion = "1.6.6"
composeActivityVersion = "1.8.2"
composeNavigationVersion = "2.7.7"
composeCompilerVersion = "1.3.2"

constraintlayoutVersion = "2.1.4"
materialVersion = "1.11.0"

lifecycleVersion = "2.7.0"

retrofitVersion = "2.9.0"
retrofitCoroutineAdaptVersion = "0.9.2"

coroutinesVersion = "1.8.0"

daggerVersion = "2.51.1"
navVersion = "2.7.7"

rxJavaVersion = "3.1.5"
rxAndroidVersion = "3.0.0"

gsonVersion = "2.10.1"
moshiVersion = "1.14.0"
httpLogVersion = "4.12.0"

roomVersion = "2.6.1"

pagingVersion = "3.2.1"
browserVersion = "1.8.0"

detektVersion = "1.21.0"

multidexVersion = "2.0.1"
desugarJdkVersion = "2.0.4"

#Testing versions
androidTestInstrumentation = "androidx.test.runner.AndroidJUnitRunner"
junit5Version = "5.10.2"
extJUnitVersion = "1.1.5"
mockKVersion = "1.13.10"
androidXTestVersion = "1.5.2"
testMonitorVersion = "1.6.1"
orchestratorVersion = "1.4.2"
espressoVersion = "3.5.1"


[libraries]

#AndroidX
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompatVersion" }
androidx-activityCompose = { module = "androidx.activity:activity-compose", version.ref = "composeActivityVersion" }

#Compose
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "coreKtxVersion" }
androidx-swiperefreshlayout = { module = "androidx.swiperefreshlayout:swiperefreshlayout", version.ref = "swiperefreshlayoutVersion" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "composeVersion" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "composeVersion" }
compose-material = { module = "androidx.compose.material:material", version.ref = "composeVersion" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigationVersion" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "composeVersion" }
compose-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "composeVersion" }

compose-constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "constraintlayoutVersion" }
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayoutVersion" }

material = { module = "com.google.android.material:material", version.ref = "materialVersion" }

#lifecycle
androidx-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycleVersion" }
lifecycle = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycleVersion" }
lifecycle-compiler = { module = "androidx.lifecycle:lifecycle-compiler", version.ref = "lifecycleVersion" }

#navigation
navigation-frag = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "navVersion" }
navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "navVersion" }

#Networking
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofitVersion" }
retrofit-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofitVersion" }
retrofit-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofitVersion" }
retrofit-coroutines-adapter = { module = "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter", version.ref = "retrofitCoroutineAdaptVersion" }

#Coroutine
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutinesVersion" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutinesVersion" }

#Gson
gson = { module = "com.google.code.gson:gson", version.ref = "gsonVersion" }

#Moshi
moshi = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshiVersion" }
moshiCodeGen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshiVersion" }

#Gson
httpLog = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "httpLogVersion" }

#RxJava
rxJava = { module = "io.reactivex.rxjava3:rxjava", version.ref = "rxJavaVersion" }
rxAndroid = { module = "io.reactivex.rxjava3:rxandroid", version.ref = "rxAndroidVersion" }

#Room
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "roomVersion" }
roomKotlinExt = { module = "androidx.room:room-ktx", version.ref = "roomVersion" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "roomVersion" }
roomPaging = { module = "androidx.room:room-paging", version.ref = "roomVersion" }

#Dagger
dagger-runtime = { module = "com.google.dagger:dagger", version.ref = "daggerVersion" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "daggerVersion" }
dagger-hilt-runtime = { module = "com.google.dagger:hilt-android", version.ref = "daggerVersion" }
dagger-hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "daggerVersion" }
dagger-hilt-navigationCompose = "androidx.hilt:hilt-navigation-compose:1.0.0"

paging = { module = "androidx.paging:paging-runtime-ktx", version.ref = "pagingVersion" }
browser = { module = "androidx.browser:browser", version.ref = "browserVersion" }

desugarJdk = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugarJdkVersion" }
multidex = { module = "androidx.multidex:multidex", version.ref = "multidexVersion" }

# Unit testing
junit5Api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5Version" }
junit5Engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5Version" }
junit5Params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit5Version" }
junitVintageEngine = { module="org.junit.vintage:junit-vintage-engine", version.ref = "junit5Version" }
extJUnit = { module = "androidx.test.ext:junit", version.ref = "extJUnitVersion" }
kotlinxCoroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutinesVersion" }
mockK = { module = "io.mockk:mockk", version.ref = "mockKVersion" }

# Android testing
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espressoVersion" }
androidTestRunner = { module = "androidx.test:runner", version.ref = "androidXTestVersion" }
androidTestOrchestrator = { module = "androidx.test:orchestrator", version.ref = "orchestratorVersion" }
androidTestMonitor = { module = "androidx.test:monitor", version.ref = "testMonitorVersion" }
mockKAndroid = { module = "io.mockk:mockk-android", version.ref = "mockKVersion" }
mockKAgentJvm = { module = "io.mockk:mockk-agent-jvm", version.ref = "mockKVersion" }

# Gradle plugins
plugin-androidTools = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePluginVersion" }
plugin-kotlinGradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlinVersion" }
plugin-hiltAndroidGradle = { module = "com.google.dagger:hilt-android-gradle-plugin", version.ref = "daggerVersion" }
plugin-navGradle = { module = "androidx.navigation:navigation-safe-args-gradle-plugin", version.ref = "navVersion" }

[bundles]
daggerRuntimes = ["dagger-runtime", "dagger-hilt-runtime"]
daggerCompilers = ["dagger-compiler", "dagger-hilt-compiler"]
